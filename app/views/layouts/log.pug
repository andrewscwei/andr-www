extends /layouts/page
include /includes/button
include /includes/log-entry

append vars
  -
    nav = {};

    const n = _.get(data, 'log.length');
    const perPage = _.get($, 'collections.log.paginate.perPage');

    if (n && perPage) {
      let index = 0;

      for (let i = 0; i < n; i++)
        if (data.log[i].uid === uid) { index = i; break; }

      let page = Math.floor(index/perPage + 1);

      nav.grid = `/logs/${(page > 1) ? `${page}/` : ''}`;
    }

block page
  div(is='page-log' name='page')
    div#inner-page
      div(name='header')
        div(name='info')
          h1(name='title')= title
          span(name='date' type='label')= m(date).format('MMM DD YY')
          if tags && tags.length
            div(name='tags')
              each tag in tags
                +button({ label: tag.name, href: `/logs/tag/${tag.slug}/` }).tag.slug
      div(name='contents')
        != markdown || body
      div(name='footer')
        +button({ iconClass: 'prev', label: __('prev'), href: previous && previous.path })(style=!previous && 'visibility:hidden').prev.post
        +button({ iconClass: 'up' })(name='top-button').arrow
        +button({ iconClass: 'next', label: __('next'), href: next && next.path })(style=!next && 'visibility:hidden').next.post
      if related
        div(name='related')
          div.tags(name='tags')
            +button({ label: __('related') })(disabled=true).tag
          div.grid
            each entry in related
              +log-entry(entry)(name='entry')

