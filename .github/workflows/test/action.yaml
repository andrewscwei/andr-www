name: Build
description: Builds and tests a Node.js project
inputs:
  artifact-name:
    default: build-artifact
    description: Artifacts name
  artifact-path:
    description: Artifacts path (relative to working directory)
    required: false
  package-manager:
    description: Package manager to use (`npm`, `yarn` or `pnpm`)
    required: false
  build-command:
    description: Build command
    required: false
  postbuild-command:
    description: Command to run after building
    required: false
  prebuild-command:
    description: Command to run before building
    required: false
outputs:
  artifact-name:
    description: Name of the uploaded artifacts
    value: ${{ inputs.artifact-path && inputs.artifact-name || '' }}
  artifact-path:
    description: Path of the uploaded artifacts (relative to working directory)
    value: ${{ inputs.artifact-path }}
runs:
  using: composite
  steps:
    - name: Prepare
      id: prepare
      shell: bash
      run: |
        if [ '${{ inputs.package-manager }}' != '' ]; then
          echo "package_manager=${{ inputs.package-manager }}" >> $GITHUB_OUTPUT
        elif [ -f pnpm-lock.yaml ]; then
          echo "package_manager=pnpm" >> $GITHUB_OUTPUT
        elif [ -f yarn.lock ]; then
          echo "package_manager=yarn" >> $GITHUB_OUTPUT
        else
          echo "package_manager=npm" >> $GITHUB_OUTPUT
        fi

        if [ -f .node-version ]; then
          echo "node_version_file=.node-version" >> $GITHUB_OUTPUT
        elif [ -f .tool-versions ]; then
          echo "node_version_file=.tool-versions" >> $GITHUB_OUTPUT
        elif [ -f .nvmrc ]; then
          echo "node_version_file=.nvmrc" >> $GITHUB_OUTPUT
        else
          echo "node_version_file=package.json" >> $GITHUB_OUTPUT
        fi
    - name: Set up PNPM
      if: ${{ steps.prepare.outputs.package_manager == 'pnpm' }}
      uses: pnpm/action-setup@v4
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        cache: ${{ steps.prepare.outputs.package_manager }}
        node-version-file: ${{ steps.prepare.outputs.node_version_file }}
    - name: Install Node modules
      shell: bash
      run: ${{ steps.prepare.outputs.package_manager }} install
    - name: Prebuild
      if: ${{ inputs.prebuild-command }}
      shell: bash
      run: ${{ inputs.prebuild-command }}
    - name: Build
      shell: bash
      run: ${{ inputs.build-command || '${{ steps.prepare.outputs.package_manager }} run build' }}
    - name: Postbuild
      if: ${{ inputs.postbuild-command }}
      shell: bash
      run: ${{ inputs.postbuild-command }}
    - name: Store artifact
      if: ${{ inputs.artifact-path }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-path }}
